name: Build Android APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip openjdk-17-jdk python3-pip curl
          pip install --upgrade pip
          pip install buildozer==1.5.0 cython virtualenv
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          ls -la /home/runner/.local/bin/buildozer || echo "Buildozer binary not found"

      - name: Download Android SDK and NDK
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q sdk-tools.zip -d latest
          rm sdk-tools.zip
          ls -la $HOME/android-sdk/cmdline-tools/latest/bin/ || echo "SDK tools not found"
          if [ -f "$HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager" ]; then
            yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
            yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager \
              "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          else
            echo "sdkmanager not found, aborting"
            exit 1
          fi

          cd $HOME
          curl -o ndk.zip https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          unzip -q ndk.zip
          rm ndk.zip

          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-ndk-r25b" >> $GITHUB_PATH

      - name: Debug environment
        run: |
          echo "PATH: $PATH"
          python3 --version
          pip list
          ls -la /home/runner/.local/bin/
          ls -la $HOME/android-sdk
          ls -la $HOME/android-sdk/cmdline-tools/latest/bin/
          ls -la $HOME/android-ndk-r25b

      - name: Verify tools
        run: |
          which buildozer || echo "⚠️ buildozer not found"
          which sdkmanager || echo "⚠️ sdkmanager not found"
          which javac || echo "⚠️ javac not found"
          /home/runner/.local/bin/buildozer --version || echo "⚠️ buildozer command failed"

      - name: Initialize buildozer
        run: |
          /home/runner/.local/bin/buildozer init || true
          sed -i 's/# package.domain = mydomain/package.domain = max4442/g' buildozer.spec
          sed -i 's/# package.name = myapp/package.name = teso_app/g' buildozer.spec
          sed -i 's/requirements = python3,hostpython3/requirements = python3,kivy/g' buildozer.spec
          echo "android.sdk_path = $HOME/android-sdk" >> buildozer.spec
          echo "android.ndk_path = $HOME/android-ndk-r25b" >> buildozer.spec
          cat buildozer.spec

      - name: Clean Buildozer cache
        run: |
          rm -rf .buildozer

      - name: Build APK
        run: |
          /home/runner/.local/bin/buildozer -v android debug
        env:
          PATH: ${{ env.PATH }}:$HOME/.local/bin:$HOME/android-sdk/platform-tools:$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-ndk-r25b

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: teso_app-apk
          path: bin/*.apk
